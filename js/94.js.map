{"version":3,"file":"js/94.js","mappings":"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","sources":["webpack:///./entities/transaction/ui/Transaction/TransactionCard/TransactionCard.tsx","webpack:///./widgets/transactionList/ui/TransactionStats/TransactionStats.tsx","webpack:///./widgets/transactionList/ui/TransactionsList.tsx","webpack:///./pages/transactions/ui/TransactionsPage.tsx"],"sourcesContent":["import { Avatar, Badge, Card, Space, Tag, Typography } from 'antd';\nimport React, { FC } from 'react';\nimport { useAppTranslation } from 'src/app/providers/i18n';\nimport { Transaction, TransactionType } from 'src/shared/api/mock/types';\n\nconst { Text, Title } = Typography;\n\ninterface TransactionCardProps {\n  transaction: Transaction;\n  onClick?: (id: string) => void;\n}\n\nexport const TransactionCard: FC<TransactionCardProps> = ({ transaction, onClick }) => {\n  const { t } = useAppTranslation();\n  const isIncome = transaction.type === TransactionType.INCOME;\n  const isExpense = transaction.type === TransactionType.EXPENSE;\n  const displayAmount = `${Math.abs(transaction.amount).toLocaleString('ru-RU')} ₽`;\n\n  const getTransactionTypeConfig = (type: TransactionType) => {\n    switch (type) {\n      case TransactionType.INCOME:\n        return { color: 'green', text: t('transaction.card.income') };\n      case TransactionType.EXPENSE:\n        return { color: 'red', text: t('transaction.card.expense') };\n      case TransactionType.TRANSFER:\n        return { color: 'blue', text: t('transaction.card.transfer') };\n      default:\n        return { color: 'default', text: t('transaction.card.unknown') };\n    }\n  };\n\n  const typeConfig = getTransactionTypeConfig(transaction.type);\n\n  return (\n    <Badge.Ribbon text={typeConfig.text} color={typeConfig.color}>\n      <Card\n        hoverable\n        onClick={() => onClick?.(transaction.id)}\n        style={{\n          height: '280px',\n          display: 'flex',\n          flexDirection: 'column',\n        }}\n        styles={{\n          body: {\n            flex: 1,\n            display: 'flex',\n            flexDirection: 'column',\n            justifyContent: 'space-between',\n          },\n        }}\n      >\n        {/* Заголовок карточки */}\n        <Space direction=\"vertical\" size=\"middle\" style={{ width: '100%' }}>\n          <Space align=\"start\" size=\"middle\">\n            <Avatar\n              size={48}\n              style={{\n                backgroundColor: transaction.categoryColor + '20',\n                border: `2px solid ${transaction.categoryColor}`,\n                fontSize: '20px',\n              }}\n            >\n              {transaction.categoryIcon}\n            </Avatar>\n            <div style={{ flex: 1 }}>\n              <Title level={5} style={{ margin: 0, marginBottom: '4px' }}>\n                {transaction.title}\n              </Title>\n              <Tag color={transaction.categoryColor} style={{ margin: 0 }}>\n                {transaction.categoryName}\n              </Tag>\n            </div>\n          </Space>\n\n          {/* Описание */}\n          <Text\n            type=\"secondary\"\n            style={{\n              fontSize: '13px',\n              display: '-webkit-box',\n              WebkitLineClamp: 2,\n              WebkitBoxOrient: 'vertical',\n              overflow: 'hidden',\n              minHeight: '40px',\n            }}\n          >\n            {transaction.description}\n          </Text>\n\n          {/* Нижняя часть - сумма и дата */}\n          <div>\n            <div\n              style={{\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                marginBottom: '8px',\n              }}\n            >\n              <Text\n                strong\n                style={{\n                  fontSize: '18px',\n                  color: isIncome ? '#52c41a' : isExpense ? '#f5222d' : '#1677ff',\n                }}\n              >\n                {isIncome ? '+' : isExpense ? '-' : ''}\n                {displayAmount}\n              </Text>\n            </div>\n\n            <Text type=\"secondary\" style={{ fontSize: '12px' }}>\n              {new Date(transaction.date).toLocaleDateString('ru-RU', {\n                day: '2-digit',\n                month: 'short',\n                year: 'numeric',\n                hour: '2-digit',\n                minute: '2-digit',\n              })}\n            </Text>\n          </div>\n        </Space>\n      </Card>\n    </Badge.Ribbon>\n  );\n};\n","import { Card, Col, Row, Typography } from 'antd';\nimport React, { FC } from 'react';\nimport { useAppTranslation } from 'src/app/providers/i18n';\nimport { Transaction, TransactionType } from 'src/shared/api/mock/types';\n\nconst { Text, Title } = Typography;\n\ninterface TransactionStatsProps {\n  transactions: Transaction[];\n}\n\nexport const TransactionStats: FC<TransactionStatsProps> = ({ transactions }) => {\n  const { t } = useAppTranslation();\n  const income = transactions.filter((t) => t.type === TransactionType.INCOME).reduce((sum, t) => sum + t.amount, 0);\n\n  const expenses = Math.abs(\n    transactions.filter((t) => t.type === TransactionType.EXPENSE).reduce((sum, t) => sum + t.amount, 0)\n  );\n\n  const totalTransactions = transactions.length;\n\n  return (\n    <Card style={{ marginBottom: '24px' }}>\n      <Row gutter={16} align=\"middle\">\n        <Col span={8}>\n          <div style={{ textAlign: 'center' }}>\n            <Title level={4} style={{ margin: 0, color: '#52c41a' }}>\n              {income.toLocaleString('ru-RU')} ₽\n            </Title>\n            <Text type=\"secondary\">{t('transaction.stats.income')}</Text>\n          </div>\n        </Col>\n        <Col span={8}>\n          <div style={{ textAlign: 'center' }}>\n            <Title level={4} style={{ margin: 0, color: '#f5222d' }}>\n              {expenses.toLocaleString('ru-RU')} ₽\n            </Title>\n            <Text type=\"secondary\">{t('transaction.stats.expenses')}</Text>\n          </div>\n        </Col>\n        <Col span={8}>\n          <div style={{ textAlign: 'center' }}>\n            <Title level={4} style={{ margin: 0 }}>\n              {totalTransactions}\n            </Title>\n            <Text type=\"secondary\">{t('transaction.stats.total')}</Text>\n          </div>\n        </Col>\n      </Row>\n    </Card>\n  );\n};\n","import { Col, Empty, Pagination, Row } from 'antd';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { useAppTranslation } from 'src/app/providers/i18n';\nimport { TransactionCard } from 'src/entities/transaction';\nimport { MockAPI } from 'src/shared/api/mock';\nimport { TransactionStats } from './TransactionStats';\n\nexport const TransactionsList = () => {\n  const navigate = useNavigate();\n  const { t } = useAppTranslation();\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(6);\n\n  // Получаем все транзакции из MockAPI\n  const allTransactions = MockAPI.getAllTransactions();\n\n  if (allTransactions.length === 0) {\n    return <Empty description={t('transaction.empty')} />;\n  }\n\n  // Сортируем по дате (новые сверху)\n  const sortedTransactions = allTransactions.sort((a, b) => new Date(b.date).getTime() - new Date(a.date).getTime());\n\n  // Пагинация\n  const startIndex = (currentPage - 1) * pageSize;\n  const endIndex = startIndex + pageSize;\n  const currentTransactions = sortedTransactions.slice(startIndex, endIndex);\n\n  const handleCardClick = (id: string) => {\n    navigate(`/transactions/${id}`);\n  };\n\n  return (\n    <div>\n      {/* Статистика */}\n      <TransactionStats transactions={allTransactions} />\n\n      {/* Сетка карточек транзакций */}\n      <Row gutter={[16, 16]}>\n        {currentTransactions.map((transaction) => (\n          <Col xs={24} sm={12} lg={8} xl={8} key={transaction.id}>\n            <TransactionCard transaction={transaction} onClick={handleCardClick} />\n          </Col>\n        ))}\n      </Row>\n\n      {/* Пагинация */}\n      {allTransactions.length > pageSize && (\n        <div style={{ textAlign: 'center', marginTop: '32px' }}>\n          <Pagination\n            current={currentPage}\n            total={allTransactions.length}\n            pageSize={pageSize}\n            onChange={setCurrentPage}\n            showSizeChanger={true}\n            onShowSizeChange={(page, size) => setPageSize(size)}\n            pageSizeOptions={[6, 12, 18, 24, 100]}\n            showQuickJumper={false}\n            showTotal={(total, range) =>\n              t('transaction.pagination.titleOfPage', { viewed: range[0], all: range[1], total })\n            }\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n","import { Col, Flex, Row } from 'antd';\nimport React from 'react';\nimport { useAppTranslation } from 'src/app/providers/i18n';\nimport { CreateTransactionButton, TransactionModal, useTransactionModal } from 'src/features/transaction';\nimport { MainLayout, MainTitle } from 'src/shared/ui';\nimport { TransactionsList } from 'src/widgets/transactionList';\n\nconst TransactionsPage = () => {\n  const { t } = useAppTranslation();\n  const { isModalOpen, modalMode, loading, editingTransactionId, openCreateModal, closeModal, handleSubmit } =\n    useTransactionModal();\n\n  return (\n    <MainLayout>\n      <Flex vertical gap={32}>\n        <Row justify=\"space-between\" align=\"middle\">\n          <Col>\n            <MainTitle title={t('transaction.title')} level={3} />\n          </Col>\n          <Col>\n            <CreateTransactionButton onClick={openCreateModal} />\n          </Col>\n        </Row>\n        <TransactionsList />\n      </Flex>\n\n      <TransactionModal\n        open={isModalOpen}\n        onClose={closeModal}\n        onSubmit={handleSubmit}\n        mode={modalMode}\n        transactionId={editingTransactionId || undefined}\n        loading={loading}\n      />\n    </MainLayout>\n  );\n};\n\nexport default TransactionsPage;\n"],"names":["Text","Typography","Title","TransactionCard","_ref","transaction","onClick","t","useAppTranslation","isIncome","type","TransactionType","INCOME","isExpense","EXPENSE","displayAmount","concat","Math","abs","amount","toLocaleString","typeConfig","color","text","TRANSFER","getTransactionTypeConfig","React","Badge","Ribbon","Card","hoverable","id","style","height","display","flexDirection","styles","body","flex","justifyContent","Space","direction","size","width","align","Avatar","backgroundColor","categoryColor","border","fontSize","categoryIcon","level","margin","marginBottom","title","Tag","categoryName","WebkitLineClamp","WebkitBoxOrient","overflow","minHeight","description","alignItems","strong","Date","date","toLocaleDateString","day","month","year","hour","minute","TransactionStats","transactions","income","filter","reduce","sum","expenses","totalTransactions","length","Row","gutter","Col","span","textAlign","TransactionsList","navigate","useNavigate","_useState2","_slicedToArray","useState","currentPage","setCurrentPage","_useState4","pageSize","setPageSize","allTransactions","MockAPI","getAllTransactions","Empty","startIndex","endIndex","currentTransactions","sort","a","b","getTime","slice","handleCardClick","map","xs","sm","lg","xl","key","marginTop","Pagination","current","total","onChange","showSizeChanger","onShowSizeChange","page","pageSizeOptions","showQuickJumper","showTotal","range","viewed","all","_useTransactionModal","useTransactionModal","isModalOpen","modalMode","loading","editingTransactionId","openCreateModal","closeModal","handleSubmit","MainLayout","Flex","vertical","gap","justify","MainTitle","CreateTransactionButton","TransactionModal","open","onClose","onSubmit","mode","transactionId","undefined"],"sourceRoot":""}