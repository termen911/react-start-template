{"version":3,"file":"js/278.js","mappings":"onBAaO,IAAMA,EAAa,WAAM,IAAAC,EAAAC,E,IAC9BC,ECV2B,WAC3B,IAAAC,GAKIC,EAAAA,EAAAA,IAAmB,CACrBC,cAAe,CACbC,MAAO,GACPC,SAAU,GACVC,UAAWC,EAAAA,KARbC,EAAOP,EAAPO,QACAC,EAAYR,EAAZQ,aACAC,EAAQT,EAARS,SAAQC,EAAAV,EACRW,UASF,MAAO,CACLJ,QAAAA,EACAC,aAAAA,EACAI,OAZmBF,EAANE,OAabC,aAbiCH,EAAZG,aAcrBJ,SAAAA,EAEJ,CDX0DK,GAAhDP,EAAOR,EAAPQ,QAASC,EAAYT,EAAZS,aAAcI,EAAMb,EAANa,OAAQC,EAAYd,EAAZc,aAEvCE,GEZOC,EAAAA,EAAAA,GAAY,CACjBC,WAAYC,EAAAA,IFWNC,EAAMJ,EAANI,OAAQC,EAASL,EAATK,UAAWC,EAAON,EAAPM,QAASC,EAAKP,EAALO,MAAOC,EAASR,EAATQ,UAAWC,EAAIT,EAAJS,KAEiBC,G,GAAnCC,EAAAA,EAAAA,UAA8B,M,EAAK,E,k5BAAhEC,EAAUF,EAAA,GAAEG,EAAaH,EAAA,GAC1BI,GAAWC,EAAAA,EAAAA,KACXC,GAAWC,EAAAA,EAAAA,MA2BjB,OA1BAC,EAAAA,EAAAA,YAAU,WACJZ,IACFO,EAAcN,GACdY,YAAW,WACTN,EAAc,KAChB,GAAG,KAEP,GAAG,CAACP,EAASC,KAEbW,EAAAA,EAAAA,YAAU,WACJV,GACFK,EAAc,KAElB,GAAG,CAACL,KAMJU,EAAAA,EAAAA,YAAU,WACJT,IACFK,GAASM,EAAAA,EAAAA,IAASX,EAAKY,QACvBL,EAAS,YAEb,GAAG,CAACP,EAAMK,EAAUE,IAGlBM,EAAAA,cAACC,EAAAA,EAAI,CAACC,OAAO,WAAWC,SAAUpB,EAAWqB,SAAUjC,GAZxC,SAACkC,GAChBvB,EAAOuB,EACT,IAUiFC,KAAK,SACjFtB,GAAWM,EACVU,EAAAA,cAACC,EAAAA,EAAKM,KAAI,KACRP,EAAAA,cAACQ,EAAAA,GAAY,CAACvB,MAAOK,EAAYmB,KAAK,QAAQC,UAAU,KAExD,KACJV,EAAAA,cAACC,EAAAA,EAAKM,KAAI,CAACI,MAAM,QAAQC,eAAgBrC,EAAOT,MAAQ,QAAU,GAAI+C,KAAkB,QAAdrD,EAAEe,EAAOT,aAAK,IAAAN,OAAA,EAAZA,EAAcsD,SACxFd,EAAAA,cAACe,EAAAA,GAAU,CACTC,KAAK,QACL9C,QAASA,EACT+C,MAAO,CACLC,SAAU,kCACVC,QAAS,CACPC,MAAO,6BACPN,QAAS,0BAGbO,OAAQ,SAAAC,GAAA,IAAGC,EAAKD,EAALC,MAAK,OACdvB,EAAAA,cAACwB,EAAAA,EAAKC,EAAA,GACAF,EAAK,CACTG,OAAQ1B,EAAAA,cAAC2B,EAAAA,EAAY,MACrBC,YAAY,oBACZC,OAAQtD,EAAOT,MAAQ,QAAU,KACjC,KAKRkC,EAAAA,cAACC,EAAAA,EAAKM,KAAI,CAACI,MAAM,SAASC,eAAgBrC,EAAOR,SAAW,QAAU,GAAI8C,KAAqB,QAAjBpD,EAAEc,EAAOR,gBAAQ,IAAAN,OAAA,EAAfA,EAAiBqD,SAC/Fd,EAAAA,cAACe,EAAAA,GAAU,CACTC,KAAK,WACL9C,QAASA,EACT+C,MAAO,CACLC,SAAU,mCACVY,UAAW,CACTV,MAAO,EACPN,QAAS,+CAGbO,OAAQ,SAAAU,GAAA,IAAGR,EAAKQ,EAALR,MAAK,OACdvB,EAAAA,cAACwB,EAAAA,EAAMQ,SAAQP,EAAA,GACTF,EAAK,CACTG,OAAQ1B,EAAAA,cAACiC,EAAAA,EAAY,MACrBL,YAAY,qBACZC,OAAQtD,EAAOR,SAAW,QAAU,KACpC,KAKRiC,EAAAA,cAACC,EAAAA,EAAKM,KAAI,KACRP,EAAAA,cAACkC,EAAAA,GAAM,CAACzB,KAAK,UAAU0B,SAAS,SAASC,QAAS5D,EAAc6D,OAAK,EAAC/B,KAAK,SAAQ,uBAM3F,EGnGQgC,EAAgBC,EAAAA,EAAhBD,KAAME,EAAUD,EAAAA,EAAVC,MA0Cd,QAxCmB,WACjB,IAAM9C,GAAWC,EAAAA,EAAAA,MAEjB,OACEK,EAAAA,cAACyC,EAAAA,GAAU,KACTzC,EAAAA,cAAC0C,EAAAA,EAAI,CAACC,QAAQ,SAASC,MAAM,SAASC,MAAO,CAAEC,UAAW,SACxD9C,EAAAA,cAAC+C,EAAAA,EAAI,CACHF,MAAO,CACLG,MAAO,IACPC,UAAW,8BAGbjD,EAAAA,cAACkD,EAAAA,EAAK,CAACC,UAAU,WAAW7C,KAAK,QAAQuC,MAAO,CAAEG,MAAO,SACvDhD,EAAAA,cAAA,OAAK6C,MAAO,CAAEO,UAAW,WACvBpD,EAAAA,cAACwC,EAAK,CAACa,MAAO,GAAG,gBAGnBrD,EAAAA,cAACzC,EAAU,MAEXyC,EAAAA,cAAA,OAAK6C,MAAO,CAAEO,UAAW,WACvBpD,EAAAA,cAACkD,EAAAA,EAAK,CAACC,UAAU,WAAW7C,KAAK,SAC/BN,EAAAA,cAACsC,EAAI,KACHtC,EAAAA,cAACkC,EAAAA,GAAM,CAACzB,KAAK,OAAON,UAAQ,GAAC,mBAI/BH,EAAAA,cAACsC,EAAI,KAAC,oBACc,IAClBtC,EAAAA,cAACkC,EAAAA,GAAM,CAACzB,KAAK,OAAO6C,QAAS,kBAAM5D,EAAS,SAAS,GAAE,eAWzE,C,gDC7CazB,EAAa,mCAOhBsF,EAAAA,EAAUC,a","sources":["webpack:///./features/auth/ui/SignupForm.tsx","webpack:///./features/auth/model/useSignupForm.ts","webpack:///./features/auth/api/useSignupMutation.ts","webpack:///./pages/auth/signup/ui/SignupPage.tsx","webpack:///./shared/lib/consts/api.consts.ts"],"sourcesContent":["import { LockOutlined, UserOutlined } from '@ant-design/icons';\nimport { Button, Form, Input } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { Controller } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { useAppDispatch } from 'src/app/store';\nimport { setToken } from 'src/entities/session/model/slice';\nimport { ErrorDisplay } from 'src/shared';\nimport { ServerErrors } from 'src/shared/api/types/error';\nimport { useSignupMutation } from '../api/useSignupMutation';\nimport { SignupDto } from '../model/types';\nimport { useSignupForm } from '../model/useSignupForm';\n\nexport const SignupForm = () => {\n  const { control, handleSubmit, errors, isSubmitting } = useSignupForm();\n\n  const { mutate, isPending, isError, error, isSuccess, data } = useSignupMutation();\n\n  const [localError, setLocalError] = useState<ServerErrors | null>(null);\n  const dispatch = useAppDispatch();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (isError) {\n      setLocalError(error as unknown as ServerErrors);\n      setTimeout(() => {\n        setLocalError(null);\n      }, 5000);\n    }\n  }, [isError, error]);\n\n  useEffect(() => {\n    if (isSuccess) {\n      setLocalError(null);\n    }\n  }, [isSuccess]);\n\n  const onSubmit = (formData: SignupDto) => {\n    mutate(formData);\n  };\n\n  useEffect(() => {\n    if (data) {\n      dispatch(setToken(data.token as string));\n      navigate('/profile');\n    }\n  }, [data, dispatch, navigate]);\n\n  return (\n    <Form layout=\"vertical\" disabled={isPending} onFinish={handleSubmit(onSubmit)} size=\"large\">\n      {isError && localError ? (\n        <Form.Item>\n          <ErrorDisplay error={localError} type=\"error\" showIcon={true} />\n        </Form.Item>\n      ) : null}\n      <Form.Item label=\"Email\" validateStatus={errors.email ? 'error' : ''} help={errors.email?.message}>\n        <Controller\n          name=\"email\"\n          control={control}\n          rules={{\n            required: 'Email обязателен для заполнения',\n            pattern: {\n              value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n              message: 'Неверный формат email',\n            },\n          }}\n          render={({ field }) => (\n            <Input\n              {...field}\n              prefix={<UserOutlined />}\n              placeholder=\"Введите ваш email\"\n              status={errors.email ? 'error' : ''}\n            />\n          )}\n        />\n      </Form.Item>\n\n      <Form.Item label=\"Пароль\" validateStatus={errors.password ? 'error' : ''} help={errors.password?.message}>\n        <Controller\n          name=\"password\"\n          control={control}\n          rules={{\n            required: 'Пароль обязателен для заполнения',\n            minLength: {\n              value: 6,\n              message: 'Пароль должен содержать минимум 6 символов',\n            },\n          }}\n          render={({ field }) => (\n            <Input.Password\n              {...field}\n              prefix={<LockOutlined />}\n              placeholder=\"Введите ваш пароль\"\n              status={errors.password ? 'error' : ''}\n            />\n          )}\n        />\n      </Form.Item>\n\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\" loading={isSubmitting} block size=\"large\">\n          Зарегистрироваться\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n","import { useForm } from 'react-hook-form';\nimport { SignupDto } from './types';\nimport { COMMAND_ID } from 'src/shared/lib/consts/api.consts';\n\nexport const useSignupForm = () => {\n  const {\n    control,\n    handleSubmit,\n    setError,\n    formState: { errors, isSubmitting },\n  } = useForm<SignupDto>({\n    defaultValues: {\n      email: '',\n      password: '',\n      commandId: COMMAND_ID,\n    },\n  });\n\n  return {\n    control,\n    handleSubmit,\n    errors,\n    isSubmitting,\n    setError,\n  };\n};\n","import { useMutation } from '@tanstack/react-query';\nimport { signup } from './authApi';\n\nexport const useSignupMutation = () => {\n  return useMutation({\n    mutationFn: signup,\n  });\n};\n","import { Button, Card, Flex, Space, Typography } from 'antd';\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { SignupForm } from 'src/features/auth/ui/SignupForm';\nimport { MainLayout } from 'src/shared';\n\nconst { Text, Title } = Typography;\n\nconst SignupPage = () => {\n  const navigate = useNavigate();\n\n  return (\n    <MainLayout>\n      <Flex justify=\"center\" align=\"center\" style={{ minHeight: '90vh' }}>\n        <Card\n          style={{\n            width: 400,\n            boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n          }}\n        >\n          <Space direction=\"vertical\" size=\"large\" style={{ width: '100%' }}>\n            <div style={{ textAlign: 'center' }}>\n              <Title level={2}>Регистрация</Title>\n            </div>\n\n            <SignupForm />\n\n            <div style={{ textAlign: 'center' }}>\n              <Space direction=\"vertical\" size=\"small\">\n                <Text>\n                  <Button type=\"link\" disabled>\n                    Забыли пароль?\n                  </Button>\n                </Text>\n                <Text>\n                  Уже есть аккаунт?{' '}\n                  <Button type=\"link\" onClick={() => navigate('/login')}>\n                    Войти\n                  </Button>\n                </Text>\n              </Space>\n            </div>\n          </Space>\n        </Card>\n      </Flex>\n    </MainLayout>\n  );\n};\nexport default SignupPage;\n","import { ErrorCode } from 'src/shared/api/types/error';\n\nexport const COMMAND_ID = 'sergn-react-start-template-test1';\n\nexport const UNKNOWN_ERROR_MESSAGE = {\n  name: 'Unknown error',\n  stack: 'Unknown error',\n  message: 'Unknown error',\n  extensions: {\n    code: ErrorCode.UNKNOWN_ERROR,\n  },\n};\n"],"names":["SignupForm","_errors$email","_errors$password","_useSignupForm","_useForm","useForm","defaultValues","email","password","commandId","COMMAND_ID","control","handleSubmit","setError","_useForm$formState","formState","errors","isSubmitting","useSignupForm","_useSignupMutation","useMutation","mutationFn","signup","mutate","isPending","isError","error","isSuccess","data","_useState2","useState","localError","setLocalError","dispatch","useAppDispatch","navigate","useNavigate","useEffect","setTimeout","setToken","token","React","Form","layout","disabled","onFinish","formData","size","Item","ErrorDisplay","type","showIcon","label","validateStatus","help","message","Controller","name","rules","required","pattern","value","render","_ref","field","Input","_extends","prefix","UserOutlined","placeholder","status","minLength","_ref2","Password","LockOutlined","Button","htmlType","loading","block","Text","Typography","Title","MainLayout","Flex","justify","align","style","minHeight","Card","width","boxShadow","Space","direction","textAlign","level","onClick","ErrorCode","UNKNOWN_ERROR"],"sourceRoot":""}