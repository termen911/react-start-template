{"version":3,"file":"js/619.js","mappings":"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","sources":["webpack:///./features/auth/ui/SigninForm.tsx","webpack:///./features/auth/model/useSigninForm.ts","webpack:///./features/auth/api/useSigninMutation.ts","webpack:///./pages/auth/signin/ui/SigninPage.tsx"],"sourcesContent":["import { LockOutlined, UserOutlined } from '@ant-design/icons';\nimport { Button, Form, Input } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { Controller } from 'react-hook-form';\nimport { useNavigate } from 'react-router-dom';\nimport { useSigninForm } from '../model/useSigninForm';\nimport { SigninDto } from '../model/types';\nimport { useSigninMutation } from '../api/useSigninMutation';\nimport { useAppDispatch } from 'src/app/store';\nimport { ErrorDisplay } from 'src/shared';\nimport { ServerErrors } from 'src/shared/api/types/error';\nimport { setToken } from 'src/entities/session/model/slice';\n\nexport const SigninForm = () => {\n  const { control, handleSubmit, errors, isSubmitting } = useSigninForm();\n  const { mutate, isPending, isError, error, isSuccess, data } = useSigninMutation();\n  const navigate = useNavigate();\n  const dispatch = useAppDispatch();\n\n  const [localError, setLocalError] = useState<ServerErrors | null>(null);\n\n  const onSubmit = (formData: SigninDto) => {\n    mutate(formData);\n  };\n\n  useEffect(() => {\n    if (isError) {\n      setLocalError(error as unknown as ServerErrors);\n      setTimeout(() => {\n        setLocalError(null);\n      }, 5000);\n    }\n  }, [isError, error]);\n\n  useEffect(() => {\n    if (isSuccess) {\n      dispatch(setToken(data.token as string));\n      navigate('/profile');\n    }\n  }, [data, dispatch, isSuccess, navigate]);\n\n  return (\n    <Form layout=\"vertical\" onFinish={handleSubmit(onSubmit)} size=\"large\">\n      {isError && localError ? (\n        <Form.Item>\n          <ErrorDisplay error={localError} type=\"error\" showIcon={true} />\n        </Form.Item>\n      ) : null}\n      <Form.Item label=\"Логин\" validateStatus={errors.email ? 'error' : ''} help={errors.email?.message}>\n        <Controller\n          name=\"email\"\n          control={control}\n          rules={{\n            required: 'Email обязателен для заполнения',\n            pattern: {\n              value: /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/,\n              message: 'Неверный формат email',\n            },\n          }}\n          render={({ field }) => (\n            <Input\n              {...field}\n              prefix={<UserOutlined />}\n              placeholder=\"Введите ваш email\"\n              status={errors.email ? 'error' : ''}\n            />\n          )}\n        />\n      </Form.Item>\n\n      <Form.Item label=\"Пароль\" validateStatus={errors.password ? 'error' : ''} help={errors.password?.message}>\n        <Controller\n          name=\"password\"\n          control={control}\n          rules={{\n            required: 'Пароль обязателен для заполнения',\n            minLength: {\n              value: 6,\n              message: 'Пароль должен содержать минимум 6 символов',\n            },\n          }}\n          render={({ field }) => (\n            <Input.Password\n              {...field}\n              prefix={<LockOutlined />}\n              placeholder=\"Введите ваш пароль\"\n              status={errors.password ? 'error' : ''}\n            />\n          )}\n        />\n      </Form.Item>\n\n      <Form.Item>\n        <Button type=\"primary\" htmlType=\"submit\" block loading={isPending || isSubmitting} size=\"large\">\n          Войти\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n};\n","import { useForm } from 'react-hook-form';\nimport { SigninDto } from './types';\n\nexport const useSigninForm = () => {\n  const {\n    control,\n    handleSubmit,\n    formState: { errors, isSubmitting },\n  } = useForm<SigninDto>({\n    defaultValues: {\n      email: '',\n      password: '',\n    },\n  });\n\n  return {\n    control,\n    handleSubmit,\n    errors,\n    isSubmitting,\n  };\n};\n","import { useMutation } from '@tanstack/react-query';\nimport { signin } from './authApi';\n\nexport const useSigninMutation = () => {\n  return useMutation({\n    mutationFn: signin,\n  });\n};\n","import { Button, Card, Flex, Space, Typography } from 'antd';\nimport React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { SigninForm } from 'src/features/auth/ui/SigninForm';\nimport { MainLayout } from 'src/shared';\n\nconst { Text, Title } = Typography;\n\nconst SigninPage = () => {\n  const navigate = useNavigate();\n\n  return (\n    <MainLayout>\n      <Flex justify=\"center\" align=\"center\" style={{ minHeight: '90vh' }}>\n        <Card\n          style={{\n            width: 400,\n            boxShadow: '0 4px 8px rgba(0,0,0,0.1)',\n          }}\n        >\n          <Space direction=\"vertical\" size=\"large\" style={{ width: '100%' }}>\n            <div style={{ textAlign: 'center' }}>\n              <Title level={2}>Вход в систему</Title>\n            </div>\n\n            <SigninForm />\n\n            <div style={{ textAlign: 'center' }}>\n              <Space direction=\"vertical\" size=\"small\">\n                <Text>\n                  <Button type=\"link\" disabled>\n                    Забыли пароль?\n                  </Button>\n                </Text>\n                <Text>\n                  Нет аккаунта?{' '}\n                  <Button type=\"link\" onClick={() => navigate('/signup')}>\n                    Зарегистрироваться\n                  </Button>\n                </Text>\n              </Space>\n            </div>\n          </Space>\n        </Card>\n      </Flex>\n    </MainLayout>\n  );\n};\n\nexport default SigninPage;\n"],"names":["SigninForm","_errors$email","_errors$password","_useSigninForm","_useForm","useForm","defaultValues","email","password","control","handleSubmit","_useForm$formState","formState","errors","isSubmitting","useSigninForm","_useSigninMutation","useMutation","mutationFn","signin","mutate","isPending","isError","error","isSuccess","data","navigate","useNavigate","dispatch","useAppDispatch","_useState2","useState","localError","setLocalError","useEffect","setTimeout","setToken","token","React","Form","layout","onFinish","formData","size","Item","ErrorDisplay","type","showIcon","label","validateStatus","help","message","Controller","name","rules","required","pattern","value","render","_ref","field","Input","_extends","prefix","UserOutlined","placeholder","status","minLength","_ref2","Password","LockOutlined","Button","htmlType","block","loading","Text","Typography","Title","MainLayout","Flex","justify","align","style","minHeight","Card","width","boxShadow","Space","direction","textAlign","level","disabled","onClick"],"sourceRoot":""}